{"ast":null,"code":"var _jsxFileName = \"/Users/Dell/Downloads/firebase-mini-project/firestore-poll/src/PollResults.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { collection, onSnapshot, query, orderBy, doc, updateDoc, increment } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollResults() {\n  _s();\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"pollResponses\"), orderBy(\"upvotes\", \"desc\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setResponses(snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    });\n    return () => unsubscribe();\n  }, []);\n  const upvote = async id => {\n    const ref = doc(db, \"pollResponses\", id);\n    await updateDoc(ref, {\n      upvotes: increment(1)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      listStyle: \"none\",\n      padding: 0\n    },\n    children: responses.map(({\n      id,\n      text,\n      upvotes\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        marginBottom: \"0.75rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), \" \\u2014 \", upvotes, \" votes\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => upvote(id),\n        style: {\n          marginLeft: \"1rem\",\n          padding: \"0.25rem 0.5rem\"\n        },\n        children: \"\\uD83D\\uDC4D Upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(PollResults, \"fiN9WW5l8xSd11IHrn6onE96d44=\");\n_c = PollResults;\nexport default PollResults;\nvar _c;\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"names":["useEffect","useState","collection","onSnapshot","query","orderBy","doc","updateDoc","increment","db","jsxDEV","_jsxDEV","PollResults","_s","responses","setResponses","q","unsubscribe","snapshot","docs","map","id","data","upvote","ref","upvotes","style","listStyle","padding","children","text","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/Dell/Downloads/firebase-mini-project/firestore-poll/src/PollResults.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { collection, onSnapshot, query, orderBy, doc, updateDoc, increment } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nfunction PollResults() {\n  const [responses, setResponses] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(db, \"pollResponses\"), orderBy(\"upvotes\", \"desc\"));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      setResponses(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const upvote = async (id) => {\n    const ref = doc(db, \"pollResponses\", id);\n    await updateDoc(ref, { upvotes: increment(1) });\n  };\n\n  return (\n    <ul style={{ listStyle: \"none\", padding: 0 }}>\n      {responses.map(({ id, text, upvotes }) => (\n        <li key={id} style={{ marginBottom: \"0.75rem\" }}>\n          <strong>{text}</strong> ‚Äî {upvotes} votes\n          <button\n            onClick={() => upvote(id)}\n            style={{ marginLeft: \"1rem\", padding: \"0.25rem 0.5rem\" }}\n          >\n            üëç Upvote\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default PollResults;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AACtG,SAASC,EAAE,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMgB,CAAC,GAAGZ,KAAK,CAACF,UAAU,CAACO,EAAE,EAAE,eAAe,CAAC,EAAEJ,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC5E,MAAMY,WAAW,GAAGd,UAAU,CAACa,CAAC,EAAGE,QAAQ,IAAK;MAC9CH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACd,GAAG,KAAK;QAAEe,EAAE,EAAEf,GAAG,CAACe,EAAE;QAAE,GAAGf,GAAG,CAACgB,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC;IACF,OAAO,MAAML,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,MAAM,GAAG,MAAOF,EAAE,IAAK;IAC3B,MAAMG,GAAG,GAAGlB,GAAG,CAACG,EAAE,EAAE,eAAe,EAAEY,EAAE,CAAC;IACxC,MAAMd,SAAS,CAACiB,GAAG,EAAE;MAAEC,OAAO,EAAEjB,SAAS,CAAC,CAAC;IAAE,CAAC,CAAC;EACjD,CAAC;EAED,oBACEG,OAAA;IAAIe,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC1Cf,SAAS,CAACM,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAES,IAAI;MAAEL;IAAQ,CAAC,kBACnCd,OAAA;MAAae,KAAK,EAAE;QAAEK,YAAY,EAAE;MAAU,CAAE;MAAAF,QAAA,gBAC9ClB,OAAA;QAAAkB,QAAA,EAASC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,YAAG,EAACV,OAAO,EAAC,QACnC,eAAAd,OAAA;QACEyB,OAAO,EAAEA,CAAA,KAAMb,MAAM,CAACF,EAAE,CAAE;QAC1BK,KAAK,EAAE;UAAEW,UAAU,EAAE,MAAM;UAAET,OAAO,EAAE;QAAiB,CAAE;QAAAC,QAAA,EAC1D;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAPFd,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACtB,EAAA,CA/BQD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}